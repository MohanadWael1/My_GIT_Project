
 git config --global user.email "mohanad.waelelsaeed@gmail.com" /*Make git know ur mail*/
 git config --global user.name "Mohanad Wael" /*Make git know ur name*/
  

git config --list /*shoq these previous configurations*/

git Init /*To make the project Folder a Git Repo*/

git status /*Show status in repo */

git ls-files /*To show Indexed (staged) Files -> staging area contents*/

git add <name or just *> /*To add files to staging area */

git rm --cached <name or *> /*To unstage files*/

git commit -m "Any describtive Comment" /*To commit the file -> (Previous Stage of Pushing on Online Server)*/


git log /*To get History of Commits */
git log <--oneline or any filtration> /*To get the History in brief **One line only */

git status -s /*Tell me what files changed  if M is red not identical in staging or repo if M is green it is Identical to the staging file but no to the one in the repo*/

git diff /*After updating ur file , you want to see what is different from the last commited version of the file this will show the modification *notice , this show the difference between the working tree (Actual open file) and the staged files , If you added the filed there will be no differences */

git diff --staged /*To get differences between staged and Comitted files*/

git config --global core.editor "Any Text Editor You want" /*Give you accessbility to use any text editor for your commits*/

git show <sha> /*To do the same stuff as the diff and diff staged but just in one instruction*/

git diff <sha1>..<sha2> /*To show differences between any two commits in the tree*/


say hi to shahawy 

git restore <filename> /*restore this file from the staged tree   working tree != staged tree */

git restore --staged /*To restore this file from staged to unstaged */


git commit -am "Any describtive Comment" /*To make add and commit in one step*/



git checkout -b trans /*Making a new branch*/


git add  APPL/NRF_APPL.cpp /*staging the file to include it in the new version*/


  git commit -m'comment'